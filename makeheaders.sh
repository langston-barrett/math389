#!/usr/bin/env bash
set -e

# This script generates header files for C source files.

[[ -z "$1" ]] && echo "filename required" && exit 1

basename="$(echo $1 | rev | cut -c 3- | rev)"

rm -f "$basename.gen.h"
write() { printf "%s\n" "$1" >> "$basename.gen.h"; }

write "/* ${basename}.gen.h */"
write "/* This header file generated by $0 */"
clean_basename=$(echo "$basename" | base64)
write "#ifndef __${clean_basename}_gen_h"
write "#define __${clean_basename}_gen_h"
write "#include <stdbool.h>"
write "#include <stdint.h>"

# Include a handwritten header file if it exists (for types, etc.)
real_header="$basename.h"
if [[ -f "$real_header" ]]; then write "#include \"$real_header\""; fi

IFS=$'\n'

# Identifiers: [A-z], digits, pointers, undercores
# Then our regex is: identifier identifier(maybe_identifier, ...) {
for dec in $(grep -Po '(\w|\d|\*|\_)+ (\w|\d|\*|\_)+\((\w|\d|\*|\_|\,| )*\) \{' "$1"); do
  # cut the {, add a ;, and echo it into the header
  write $(echo "$dec" | rev | cut -c 3- | rev | echo "$(cat -);")
done

write "#endif"
